//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.03 at 11:04:58 AM EEST 
//


package tr.com.agem.arya.metadata.xul.impl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for treeseltypeAttributeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="treeseltypeAttributeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="single"/>
 *     &lt;enumeration value="multiple"/>
 *     &lt;enumeration value="cell"/>
 *     &lt;enumeration value="text"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "treeseltypeAttributeType")
@XmlEnum
public enum TreeseltypeAttributeType {


    /**
     * single: Only one row may be selected at a time.
     * 
     */
    @XmlEnumValue("single")
    SINGLE("single"),

    /**
     * multiple: (Default) Multiple rows may be selected at once.
     * 
     */
    @XmlEnumValue("multiple")
    MULTIPLE("multiple"),

    /**
     * cell: (New in Firefox 3) Individual cells can be selected.
     * 
     */
    @XmlEnumValue("cell")
    CELL("cell"),

    /**
     * text: Rows are selected; however, the selection highlight appears only over the text of the primary column.
     * 
     */
    @XmlEnumValue("text")
    TEXT("text");
    private final String value;

    TreeseltypeAttributeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TreeseltypeAttributeType fromValue(String v) {
        for (TreeseltypeAttributeType c: TreeseltypeAttributeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
